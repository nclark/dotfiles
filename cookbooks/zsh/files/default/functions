mvim() {
  (unset GEM_PATH GEM_HOME; command mvim "$@")
}

brake() {
  branch=$1
  revisions=$2
  (set -e && git rev-list --reverse $branch~$revisions..$branch | while read rev; do git checkout $rev ; rake ; done)
}

git_prompt_info() {
  REF="$(git branch 2>/dev/null|grep '*'|cut -d" " -f2)"
  echo "($REF)" 
}

pr() {
  dir=$(ruby -r ~/.zsh/support/projects.rb -le "puts Project.find('$1')")
  cd $dir

  if [ $2 ]; then
    mvim
  fi
}

fp() {
  pwd=$(pwd)
  echo ${pwd}/$1 | pbcopy
}

db() {
  ~/.zsh/support/db.rb
}

tar_dat_shit_up() {
  tar czvf $1.tar.gz $1/
}
  
new_gem() {
  bundle gem $1
  cd $1
  git commit -m "bundle gem $1"
  cd ..
  mk_remote_repo $1
  cd ..
  rm -rf $1.git
  rm -rf orig.$1
  cd $1
}

rename_url_encoded_files() {
  ruby -e "require 'fileutils' ; Dir.glob(%q{#{Dir.pwd}/**/*}).each {|f| FileUtils.mv(f, URI.decode(f).gsub(/\s/, '_'))}"
}

new-feature() {
  touch features/$1.feature
  touch features/step_definitions/$1_steps.rb
}

x-times() {
  count=$1
  shift

  for i in `seq 1 $count`; do $@; done
}

archive() {
  command="su archivebox -c 'archivebox $*'"

  ssh -tt unraid.local docker exec -it archivebox $command
}
